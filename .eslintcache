[{"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\index.js":"1","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\App.js":"2","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Pathfind.js":"3","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Node.js":"4","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\astarAlgorithm\\astar.js":"5","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Navbar.js":"6","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\DFS\\dfs.js":"7","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\Greedy-Best-first-search\\greedy-best.js":"8","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\bidirectional swarm\\bidir.js":"9"},{"size":449,"mtime":1608113495601,"results":"10","hashOfConfig":"11"},{"size":267,"mtime":1608655929287,"results":"12","hashOfConfig":"11"},{"size":11021,"mtime":1608722453046,"results":"13","hashOfConfig":"11"},{"size":433,"mtime":1608720613114,"results":"14","hashOfConfig":"11"},{"size":2010,"mtime":1608489958873,"results":"15","hashOfConfig":"11"},{"size":2714,"mtime":1608722166909,"results":"16","hashOfConfig":"11"},{"size":1359,"mtime":1608655929289,"results":"17","hashOfConfig":"11"},{"size":2124,"mtime":1608655929291,"results":"18","hashOfConfig":"11"},{"size":3069,"mtime":1608706325384,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"5mr9o5",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\index.js",[],["41","42"],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\App.js",[],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Pathfind.js",["43","44"],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Node.js",[],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\astarAlgorithm\\astar.js",[],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\components\\Navbar.js",[],"D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\DFS\\dfs.js",["45","46","47"],"const vis=[];\r\nconst visited=[];\r\nconst path=[];\r\nlet flag=0;\r\nfunction dfs(startNode, endNode, rows, cols){\r\n    \r\n\r\n    for(let i=0;i<rows;i++)\r\n    {\r\n        const temp=[];\r\n        for(let j=0;j<cols;j++)\r\n        {\r\n            temp.push(0);\r\n        }\r\n        vis.push(temp);\r\n    }\r\n    run(startNode,endNode,vis,visited);\r\n    let currentNode = endNode;\r\n    while(currentNode.previous!=undefined){\r\n        path.push(currentNode);\r\n        currentNode=currentNode.previous;\r\n    }\r\n    path.push(currentNode);\r\n    path.reverse();\r\n    return { path, visited, text: \"no path found\" };\r\n}\r\n\r\nfunction run(startNode,endNode,vis,visited){\r\n    if(vis[startNode.x][startNode.y]===0){\r\n        vis[startNode.x][startNode.y]=1;\r\n        visited.push(startNode);\r\n        if(startNode===endNode){\r\n            flag=1;\r\n            return;\r\n        }\r\n        for(let i=0;i<startNode.neighbours.length;i++){\r\n            const neighbour = startNode.neighbours[i];\r\n            if(vis[neighbour.x][neighbour.y]==0&&!neighbour.isWall){\r\n                run(startNode.neighbours[i],endNode,vis,visited);\r\n                startNode.neighbours[i].previous=startNode;\r\n                if(flag==1){\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default dfs;","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\Greedy-Best-first-search\\greedy-best.js",["48","49","50","51"],"class QElement { \r\n    constructor(element, priority) \r\n    { \r\n        this.element = element; \r\n        this.priority = priority; \r\n    } \r\n} \r\n  \r\nclass PriorityQueue { \r\n  \r\n    constructor() \r\n    { \r\n        this.items = []; \r\n    } \r\n    enqueue(element, priority) \r\n    { \r\n        var qElement = new QElement(element, priority); \r\n        var contain = false; \r\n    \r\n        for (var i = 0; i < this.items.length; i++) { \r\n            if (this.items[i].priority > qElement.priority) { \r\n                this.items.splice(i, 0, qElement); \r\n                contain = true; \r\n                break; \r\n            } \r\n        } \r\n    \r\n        if (!contain) { \r\n            this.items.push(qElement); \r\n        } \r\n    }; \r\n\r\n    dequeue() \r\n    { \r\n        if (this.isEmpty()) \r\n            return \"Underflow\"; \r\n        return this.items.shift(); \r\n    } \r\n\r\n    isEmpty() \r\n    { \r\n        return this.items.length == 0; \r\n    } \r\n} \r\n\r\nfunction greedy_best(startNode,endNode,rows,cols){\r\n    var priorityQueue = new PriorityQueue();\r\n    let visited=[];\r\n    let path=[];\r\n    const vis=[];\r\n    for(let i=0;i<rows;i++)\r\n    {\r\n        const temp=[];\r\n        for(let j=0;j<cols;j++)\r\n        {\r\n            temp.push(0);\r\n        }\r\n        vis.push(temp);\r\n    }\r\n    priorityQueue.enqueue(startNode,0);\r\n    vis[startNode.x][startNode.y]=1;\r\n    visited.push(startNode);\r\n    while(!priorityQueue.isEmpty()){\r\n        let node = priorityQueue.dequeue().element;\r\n        console.log(node);\r\n        if(node==endNode){\r\n            break;\r\n        }\r\n        for(let i=0;i<node.neighbours.length;i++){\r\n            let cur = node.neighbours[i];\r\n            if(vis[cur.x][cur.y]==0&&!cur.isWall){\r\n                visited.push(cur);\r\n                cur.previous=node;\r\n                vis[cur.x][cur.y]=1;\r\n                priorityQueue.enqueue(cur,0);\r\n            }\r\n        }\r\n    }\r\n    let cur=endNode;\r\n    while(cur.previous!=undefined){\r\n        path.push(cur);\r\n        cur=cur.previous;\r\n    }\r\n    path.push(cur);\r\n    path.reverse();\r\n    return { path, visited, text: \"no path found\" };\r\n}\r\n\r\nexport default greedy_best;","D:\\Educational\\Web Development\\My Projects\\path-finding-visualizer\\src\\bidirectional swarm\\bidir.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":33,"column":8,"nodeType":"58","endLine":33,"endColumn":10,"suggestions":"59"},{"ruleId":"60","severity":1,"message":"61","line":128,"column":31,"nodeType":"62","messageId":"63","endLine":128,"endColumn":33},{"ruleId":"60","severity":1,"message":"64","line":19,"column":31,"nodeType":"62","messageId":"63","endLine":19,"endColumn":33},{"ruleId":"60","severity":1,"message":"61","line":38,"column":45,"nodeType":"62","messageId":"63","endLine":38,"endColumn":47},{"ruleId":"60","severity":1,"message":"61","line":41,"column":24,"nodeType":"62","messageId":"63","endLine":41,"endColumn":26},{"ruleId":"60","severity":1,"message":"61","line":42,"column":34,"nodeType":"62","messageId":"63","endLine":42,"endColumn":36},{"ruleId":"60","severity":1,"message":"61","line":66,"column":16,"nodeType":"62","messageId":"63","endLine":66,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":71,"column":33,"nodeType":"62","messageId":"63","endLine":71,"endColumn":35},{"ruleId":"60","severity":1,"message":"64","line":80,"column":23,"nodeType":"62","messageId":"63","endLine":80,"endColumn":25},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initialiseGrid'. Either include it or remove the dependency array.","ArrayExpression",["67"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [initialiseGrid]",{"range":"70","text":"71"},[884,886],"[initialiseGrid]"]